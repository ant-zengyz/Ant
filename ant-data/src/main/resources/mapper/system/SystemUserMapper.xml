<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ant.data.system.dao.SystemUserMapper">
    <resultMap id="BaseResultMap" type="com.example.ant.data.system.entity.SystemUser">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user_id" jdbcType="VARCHAR" property="createUserId"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, account, password, state, create_time, create_user_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_system_user
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_system_user
    where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.example.ant.data.system.entity.SystemUser">
    insert into t_system_user (id, account, password, 
      state, create_time, create_user_id
      )
    values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}
      )
    </insert>
    <insert id="insertSelective" parameterType="com.example.ant.data.system.entity.SystemUser">
        insert into t_system_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.ant.data.system.entity.SystemUser">
        update t_system_user
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.ant.data.system.entity.SystemUser">
    update t_system_user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="selectListByParams" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from t_system_user
        <where>
            <if test="account!=null and account!=''">
                account=#{account}
            </if>
            <if test="state!=null and state!=''">
                state=#{state}
            </if>
            <if test="createUserId!=null and createUserId!=''">
                create_user_id=#{createUserId}
            </if>
            <if test="startDate!=null and endDate!=null">
                unix_timestamp(create_time) between unix_timestamp(#{startDate}) and unix_timestamp(#{endDate})
            </if>
            <if test="startDate!=null and endDate==null">
                unix_timestamp(create_time) &gt; unix_timestamp(#{startDate})
            </if>
            <if test="startDate==null and endDate!=null">
                unix_timestamp(create_time) &lt; unix_timestamp(#{endDate})
            </if>
        </where>
    </select>

    <resultMap id="BaseResultCorrelationMap" type="com.example.ant.data.system.model.SystemUserModel">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <association property="createUser" column="create_user_id" javaType="com.example.ant.data.system.entity.SystemUser" select="selectCreateUser"></association>
        <collection property="systemRoleList" column="id" ofType="com.example.ant.data.system.entity.SystemRole" select="selectSystemUserRoleList"></collection>
    </resultMap>

    <select id="selectCreateUser" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_system_user where id=#{createUserId}
    </select>

    <select id="selectSystemUserRoleList" parameterType="java.lang.String" resultMap="com.example.ant.data.system.dao.SystemRoleMapper.BaseResultMap">
        select <include refid="com.example.ant.data.system.dao.SystemRoleMapper.Base_Column_List"/> from t_system_role where state='Y' and id in (select system_role_id from t_system_user_role where system_user_id=#{systemUserId})
    </select>

    <select id="selectSystemUserCorrelationByAccount" parameterType="java.lang.String" resultMap="BaseResultCorrelationMap">
        select
        <include refid="Base_Column_List"/>
        from t_system_user where account=#{account}
    </select>

    <select id="selectListCorrelationByParams" parameterType="java.util.Map" resultMap="BaseResultCorrelationMap">
        select
        <include refid="Base_Column_List"/>
        from t_system_user
        <where>
            <if test="account!=null and account!=''">
                account like #{account}
            </if>
            <if test="state!=null and state!=''">
                state=#{state}
            </if>
            <if test="createUserId!=null and createUserId!=''">
                create_user_id=#{createUserId}
            </if>
            <if test="startDate!=null  and endDate!=null">
                unix_timestamp(create_time) between unix_timestamp(#{startDate}) and unix_timestamp(#{endDate})
            </if>
            <if test="startDate!=null and endDate==null">
                unix_timestamp(create_time) &gt; unix_timestamp(#{startDate})
            </if>
            <if test="startDate==null and endDate!=null">
                unix_timestamp(create_time) &lt; unix_timestamp(#{endDate})
            </if>
        </where>
        order by create_time desc
    </select>

    <delete id="deleteUserRole" parameterType="java.lang.String">
    delete from t_system_user_role
    where system_user_id = '${id}'
    </delete>

    <insert id="createUserRole" parameterType="java.util.Map">
    insert into t_system_user_role (system_user_id, system_role_id)
    values (#{systemUserId,jdbcType=VARCHAR}, #{systemRoleId,jdbcType=VARCHAR})
    </insert>
</mapper>